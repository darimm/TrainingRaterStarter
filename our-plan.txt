Implementing Authentication
  - Hashing mechanism. Don't store passwords in plain text
  - Create a user endpoint (already exists for us)
  - Login Endpoint
  --JSON Web Tokens
    --Handle tokens coming from the front end
    ---Passport (handles authentication) - Can use multiple strategies (google, facebook, twitter, JWT, etc) - Works with Express very well
    ---JWT (JSON Web Tokens)
  - Method to compare what was entered to the database. (Inside login route), and grant tokens.
  - Add authentication to endpoints

  - Hashing will be done with bcrypt
   - you never actually pull the password out of the database, you just hash it and compare the hash.
   

Flow:
Computer sends to server, server sends to node/express app, app sends to router, router sends to controller
Middleware sits in the middle of the request after it hits your app but before the route. Passport will live there, and BodyParser does live there
You must allow login page to work unauthenticated, but otherwise it should check authentication.
User roles are also handled in this space, though we will not be using them here.

  
  - Login Page



  --------------------------

  - How do we secure API endpoints.
  Back End Security

  Front End Security

  - Determine if we are logged in. What is my token, does it exist? (Auth Service)
  -- Responsible for determining isAuthenticated?
  -- Responsible for hitting the login endpoint.
  - Secure pages or routes
  -- Needs to be easy to implement everywhere
  - When hitting endpoints from FE how to include security token


  Stretch Goals
  - Make password great again

  Look up Behavior Subject RXJS observable type
  Usable for current user.

  Sign out? - set current user and token to null.
  ngx-cookie package lets you store tokens in cookies etc. standard setting is that cookie is https only, but is javascript enabled.
  xsrf - set by the return of the http call, and it is location-bound, has to be set by receiving a login result with the header of xsrf set.  (X-XSRF header)
  By default xsrf is not enabled by javascript, and you cannot access it from javascript

